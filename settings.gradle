include "block-chain"
include "akka-cluster-sshsessions"

include "futures-demo"
include "grpc-demo"

include "hazelcast-cluster"
include "common"
include "it-tests"
include "server-node"
project(":common").projectDir = new File("hazelcast-cluster/common")
project(":it-tests").projectDir = new File("hazelcast-cluster/it-tests")
project(":server-node").projectDir = new File("hazelcast-cluster/server-node")

include "hibernate-demo"
include "jdbc-demo"
include "jetty-servlet4-http2"

include "kafka-common"
include "kafka-client"
include "kafka-service"
project(":kafka-common").projectDir = new File("kafka-example/kafka-common")
project(":kafka-client").projectDir = new File("kafka-example/kafka-client")
project(":kafka-service").projectDir = new File("kafka-example/kafka-service")
include "kafka-example"

include "mongodb-demo"

include "service-compute"
include "service-tasks"
include "service-compute-async"
include "application"
project(":service-compute").projectDir = new File("simple-module-example/service-compute")
project(":service-tasks").projectDir = new File("simple-module-example/service-tasks")
project(":service-compute-async").projectDir = new File("simple-module-example/service-compute-async")
project(":application").projectDir = new File("simple-module-example/application")
include "simple-module-example"

include "ssh-client"
include "ssh-server"
include "ssh-examples"
include "ssh-jcommander"
project(":ssh-client").projectDir = new File("ssh-server-demo/ssh-client")
project(":ssh-server").projectDir = new File("ssh-server-demo/ssh-server")
project(":ssh-examples").projectDir = new File("ssh-server-demo/ssh-examples")
project(":ssh-jcommander").projectDir = new File("ssh-server-demo/ssh-jcommander")
include "ssh-server-demo"

include "springboot"
project(":springboot").projectDir = new File("spring/springboot")

include "springboot-fileserver"
project(":springboot-fileserver").projectDir = new File("spring/springboot-fileserver")

include "spring-security"
project(":spring-security").projectDir = new File("spring/spring-security")

include "spring-security-jwt"
project(":spring-security-jwt").projectDir = new File("spring/spring-security-jwt")

include "spring-jcasbin"
project(":spring-jcasbin").projectDir = new File("spring/spring-jcasbin")

include "spring-di"
project(":spring-di").projectDir = new File("spring/spring-di")

include "spring-websockets"
project(":spring-websockets").projectDir = new File("spring/spring-websockets")

include "avro-demo"
include "imageprocessing-demo"
include "rxjava-demo"
include "elastic-demo"

include "rabbitmq-demo"
include "rmq-common"
include "rmq-data-service"
include "rmq-data-client"
project(":rmq-common").projectDir = new File("rabbitmq-demo/rmq-common")
project(":rmq-data-service").projectDir = new File("rabbitmq-demo/rmq-data-service")
project(":rmq-data-client").projectDir = new File("rabbitmq-demo/rmq-data-client")

include "spring-bank"
include "bank-common"
include "bank-client"
include "bank-server"
project(":spring-bank").projectDir = new File("spring/spring-bank")
project(":bank-common").projectDir = new File("spring/spring-bank/bank-common")
project(":bank-client").projectDir = new File("spring/spring-bank/bank-client")
project(":bank-server").projectDir = new File("spring/spring-bank/bank-server")

include "google-apis"
include "jce-demo"